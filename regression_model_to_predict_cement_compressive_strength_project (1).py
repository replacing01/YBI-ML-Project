# -*- coding: utf-8 -*-
"""Regression_Model_to_Predict_Cement_Compressive_Strength_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/159WqCHvIop1-_m7iqM8McjEvSEGtkzr2

# **‚≠ê Regression Model to Predict Cement Compressive Strength**
"""

# import library
import pandas as pd
import seaborn as sns
import numpy as np

# import data
cement = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/Concrete%20Compressive%20Strength.csv')

# view data
cement.head()

# info of data
cement.info()

# summary statistics
cement.describe()

# check for missing value
cement.isnull().sum()

# check for categories
cement.nunique()

# visualize pairplot
sns.pairplot(cement)

# columns name
cement.columns

# define y
y = cement['Concrete Compressive Strength(MPa, megapascals) ']

# define X
X = cement[['Cement (kg in a m^3 mixture)',
       'Blast Furnace Slag (kg in a m^3 mixture)',
       'Fly Ash (kg in a m^3 mixture)', 'Water (kg in a m^3 mixture)',
       'Superplasticizer (kg in a m^3 mixture)',
       'Coarse Aggregate (kg in a m^3 mixture)',
       'Fine Aggregate (kg in a m^3 mixture)', 'Age (day)']]

# split data

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7, random_state=2529)

# verify shape
X_train.shape, X_test.shape, y_train.shape, y_test.shape

# select model

from sklearn.linear_model import LinearRegression

model = LinearRegression()

# train model

model.fit(X_train, y_train)

# predict with model

y_pred = model.predict(X_test)

# model evaluation
y_pred

# model MAE

from sklearn.metrics import mean_absolute_error

mean_absolute_error(y_test, y_pred)

# model MAPE

from sklearn.metrics import mean_absolute_percentage_error

mean_absolute_percentage_error(y_test, y_pred)

# model MSE
from sklearn.metrics import mean_squared_error

mean_squared_error(y_test, y_pred)

# future prediction
model.predict([[540,0,0,162,2.5,1040,676,28]])

# define X_new

cement.columns

X_new = [[['Cement (kg in a m^3 mixture)',540],['Blast Furnace Slag (kg in a m^3 mixture)',0],
          ['Fly Ash (kg in a m^3 mixture)',0],['Water (kg in a m^3 mixture)',162],['Superplasticizer (kg in a m^3 mixture)',2.5],
          ['Coarse Aggregate (kg in a m^3 mixture)',1040],['Fine Aggregate (kg in a m^3 mixture)',676],['Age (day)',28]]]
X_new = np.array([540,0,0,162,2.5,1040,676,28]).reshape(-1,8)
X_new.shape

# predict for X_new
model.predict(X_new)

